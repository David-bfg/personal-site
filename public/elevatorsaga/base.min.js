(function(){var a=function(){};if(!console){console={log:a,info:a,warn:a,debug:a,error:a}}}());var limitNumber=function(b,c,a){return Math.min(a,Math.max(b,c))};var epsilonEquals=function(d,c){return Math.abs(d-c)<1e-8};var sign=function(a){a=+a;if(a===0||isNaN(a)){return a}return a>0?1:-1};if(typeof Math.sign==="undefined"){Math.sign=sign}var deprecationWarning=function(a){console.warn("You are using a deprecated feature scheduled for removal: "+a)};var newGuard=function(b,a){if(!(b instanceof a)){throw"Incorrect instantiation, got "+typeof b+" but expected "+a}};var createBoolPassthroughFunction=function(a,c,b){return function(d){if(typeof d!=="undefined"){c[b]=d?true:false;c.trigger("change:"+b,c[b]);return a}else{return c[b]}}};distanceNeededToAchieveSpeed=function(b,d,c){var a=(Math.pow(d,2)-Math.pow(b,2))/(2*c);return a};accelerationNeededToAchieveChangeDistance=function(b,c,d){var a=0.5*((Math.pow(c,2)-Math.pow(b,2))/d);return a};var createFrameRequester=function(c){var a=null;var b={};b.currentT=0;b.register=function(d){a=d};b.trigger=function(){b.currentT+=c;if(a!==null){a(b.currentT)}};return b};var getCodeObjFromCode=function(code){if(code.trim().substr(0,1)=="{"&&code.trim().substr(-1,1)=="}"){code="("+code+")"}obj=eval(code);if(typeof obj.init!=="function"){throw"Code must contain an init function"}if(typeof obj.update!=="function"){throw"Code must contain an update function"}return obj};