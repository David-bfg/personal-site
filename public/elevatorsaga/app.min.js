$(function(){var o="elevatorTimeScale";var e={};var k=$(".innerworld");var j=$(".statscontainer");var n=$(".feedbackcontainer");var m=$(".challenge");var i=$(".codestatus");var f=document.getElementById("floor-template").innerHTML.trim();var a=document.getElementById("elevator-template").innerHTML.trim();var h=document.getElementById("elevatorbutton-template").innerHTML.trim();var c=document.getElementById("user-template").innerHTML.trim();var l=document.getElementById("challenge-template").innerHTML.trim();var b=document.getElementById("feedback-template").innerHTML.trim();var g=document.getElementById("codestatus-template").innerHTML.trim();var d=riot.observable({});d.worldController=createWorldController(1/60);d.worldController.on("usercode_error",function(p){console.log("World raised code error",p)});console.log(d.worldController);d.worldCreator=createWorldCreator();d.world=undefined;d.currentChallengeIndex=0;d.startStopOrRestart=function(){if(d.world.challengeEnded){d.startChallenge(d.currentChallengeIndex)}else{d.worldController.setPaused(!d.worldController.isPaused)}};d.startChallenge=function(q,p){if(typeof d.world!=="undefined"){d.world.unWind()}d.currentChallengeIndex=q;d.world=d.worldCreator.createWorld(challenges[q].options);window.world=d.world;clearAll([k,n]);presentStats(j,d.world);presentChallenge(m,challenges[q],d,d.world,d.worldController,q+1,l);presentWorld(k,d.world,f,a,h,c);d.worldController.on("timescale_changed",function(){localStorage.setItem(o,d.worldController.timeScale);presentChallenge(m,challenges[q],d,d.world,d.worldController,q+1,l)});d.world.on("stats_changed",function(){var s=challenges[q].condition.evaluate(d.world);if(s!==null){d.world.challengeEnded=true;d.worldController.setPaused(true);if(s){presentFeedback(n,b,d.world,"Success!","Challenge completed",createParamsUrl(e,{challenge:(q+2)}))}else{presentFeedback(n,b,d.world,"Challenge failed","Maybe your program needs an improvement?","")}}});console.log("Starting...");var r=$.ajax({url:"https://api.github.com/repos/David-bfg/Elevator-Saga/contents/elevatorsaga.js",async:false});r=getCodeObjFromCode(atob(r.responseJSON.content));d.worldController.start(d.world,r,window.requestAnimationFrame,p)};riot.route(function(s){e=_.reduce(s.split(","),function(t,v){var u=v.match(/(\w+)=(\w+$)/);if(u){t[u[1]]=u[2]}return t},{});var q=0;var p=true;var r=parseFloat(localStorage.getItem(o))||5;_.each(e,function(u,t){if(t==="challenge"){q=_.parseInt(u)-1;if(q<0||q>=challenges.length){console.log("Invalid challenge index",q);console.log("Defaulting to first challenge");q=0}}else{if(t==="autostart"){p=u==="false"?false:true}else{if(t==="timescale"){r=parseFloat(u)}else{if(t==="devtest"){editor.setDevTestCode()}else{if(t==="fullscreen"){makeDemoFullscreen()}}}}}});d.worldController.setTimeScale(r);d.startChallenge(q,p)})});
