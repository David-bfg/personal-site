var requireNothing=function(){return{description:"No requirement",evaluate:function(){return null}}};var fitnessChallenges=[{options:{description:"Small scenario",floorCount:4,elevatorCount:2,spawnRate:0.6},condition:requireNothing()},{options:{description:"Medium scenario",floorCount:6,elevatorCount:3,spawnRate:1.5,elevatorCapacities:[5]},condition:requireNothing()},{options:{description:"Large scenario",floorCount:18,elevatorCount:6,spawnRate:1.9,elevatorCapacities:[8]},condition:requireNothing()}];function calculateFitness(g,a,h,d){var c=createWorldController(h);var j={};var f=createWorldCreator();var e=f.createWorld(g.options);var i=createFrameRequester(h);c.on("usercode_error",function(k){j.error=k});e.on("stats_changed",function(){j.transportedPerSec=e.transportedPerSec;j.avgWaitTime=e.avgWaitTime;j.transportedCount=e.transportedCounter});c.start(e,a,i.register,true);for(var b=0;b<d&&!c.isPaused;b++){i.trigger()}return j}function makeAverageResult(b){var a={};_.forOwn(b[0].result,function(d,e){var c=_.sum(_.pluck(_.pluck(b,"result"),e));a[e]=c/b.length});return{options:b[0].options,result:a}}function doFitnessSuite(a,d){try{var h=getCodeObjFromCode(a)}catch(f){return{error:""+f}}console.log("Fitness testing code",h);var c=null;var g=[];_.times(d,function(){var e=_.map(fitnessChallenges,function(i){var j=calculateFitness(i,h,1000/60,12000);if(j.error){c=j.error;return}return{options:i.options,result:j}});if(c){return}g.push(e)});if(c){return{error:""+c}}var b=_.map(_.range(g[0].length),function(e){return makeAverageResult(_.pluck(g,e))});return b}function fitnessSuite(a,c,g){if(!!Worker&&c){try{var b=new Worker("fitnessworker.js");b.postMessage(a);b.onmessage=function(h){console.log("Got message from fitness worker",h);var e=h.data;g(e)};return}catch(f){console.log("Fitness worker creation failed, falling back to normal",f)}}var d=doFitnessSuite(a,2);g(d)};