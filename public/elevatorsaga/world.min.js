var createWorldCreator=function(){var a={};a.createFloors=function(e,c,b){var d=_.map(_.range(e),function(j,f){var h=(e-1-f)*c;var g=asFloor({},f,h,b);return g});return d};a.createElevators=function(c,g,e,b){b=b||[4];var d=200;var f=_.map(_.range(c),function(k,h){var j=new Elevator(2.6,g,e,b[h%b.length]);j.moveTo(d,null);j.setFloorPosition(0);j.updateDisplayPosition();d+=(20+j.width);return j});return f};a.createRandomUser=function(){var c=_.random(55,100);var b=new User(c);if(_.random(40)===0){b.displayType="child"}else{if(_.random(1)===0){b.displayType="female"}else{b.displayType="male"}}return b};a.spawnUserRandomly=function(g,c,f){var b=a.createRandomUser();b.moveTo(105+_.random(40),0);var e=_.random(1)===0?0:_.random(g-1);var d;if(e===0){d=_.random(1,g-1)}else{if(_.random(10)===0){d=(e+_.random(1,g-1))%g}else{d=0}}b.appearOnFloor(f[e],d);return b};a.createWorld=function(m){console.log("Creating world with options",m);var c={floorHeight:50,floorCount:4,elevatorCount:2,spawnRate:0.5};m=_.defaults(_.clone(m),c);var g={floorHeight:m.floorHeight,transportedCounter:0};riot.observable(g);var h=function(i){g.trigger("usercode_error",i)};g.floors=a.createFloors(m.floorCount,g.floorHeight,h);g.elevators=a.createElevators(m.elevatorCount,m.floorCount,g.floorHeight,m.elevatorCapacities);g.elevatorInterfaces=_.map(g.elevators,function(i){return asElevatorInterface({},i,m.floorCount,h)});g.users=[];g.transportedCounter=0;g.transportedPerSec=0;g.moveCount=0;g.elapsedTime=0;g.maxWaitTime=0;g.avgWaitTime=0;g.challengeEnded=false;var f=function(){g.transportedPerSec=g.transportedCounter/g.elapsedTime;g.moveCount=_.reduce(g.elevators,function(i,n){return i+n.moveCount},0);g.trigger("stats_changed")};var d=function(i){g.users.push(i);i.updateDisplayPosition(true);i.spawnTimestamp=g.elapsedTime;g.trigger("new_user",i);i.on("exited_elevator",function(){g.transportedCounter++;g.maxWaitTime=Math.max(g.maxWaitTime,g.elapsedTime-i.spawnTimestamp);g.avgWaitTime=(g.avgWaitTime*(g.transportedCounter-1)+(g.elapsedTime-i.spawnTimestamp))/g.transportedCounter;f()});i.updateDisplayPosition(true)};var j=function(r){for(var p=0,n=g.floors.length;p<n;++p){var q=g.floors[p];if(r.currentFloor===p){q.elevatorAvailable(r)}}for(var s=g.users,p=0,n=s.length;p<n;++p){var o=s[p];if(o.currentFloor===r.currentFloor){o.elevatorAvailable(r,g.floors[r.currentFloor])}}};for(var e=0;e<g.elevators.length;++e){g.elevators[e].on("entrance_available",j)}var b=function(p,r){for(var q=0,n=g.elevators.length,t=_.random(n-1);q<n;++q){var o=(q+t)%n;var s=g.elevators[o];if(p==="up_button_pressed"&&s.goingUpIndicator||p==="down_button_pressed"&&s.goingDownIndicator){if(s.currentFloor===r.level&&s.isOnAFloor()&&!s.isMoving&&!s.isFull()){g.elevatorInterfaces[o].goToFloor(r.level,true);return}}}};for(var e=0;e<g.floors.length;++e){g.floors[e].on("up_button_pressed down_button_pressed",b)}var k=1.001/m.spawnRate;var l=0;g.update=function(q){g.elapsedTime+=q;k+=q;l+=q;while(k>1/m.spawnRate){k-=1/m.spawnRate;d(a.spawnUserRandomly(m.floorCount,g.floorHeight,g.floors))}for(var p=0,n=g.elevators.length;p<n;++p){var r=g.elevators[p];r.update(q);r.updateElevatorMovement(q)}for(var s=g.users,p=0,n=s.length;p<n;++p){var o=s[p];o.update(q);g.maxWaitTime=Math.max(g.maxWaitTime,g.elapsedTime-o.spawnTimestamp)}for(var s=g.users,p=g.users.length-1;p>=0;p--){var o=s[p];if(o.removeMe){s.splice(p,1)}}f()};g.updateDisplayPositions=function(){for(var o=0,n=g.elevators.length;o<n;++o){g.elevators[o].updateDisplayPosition()}for(var p=g.users,o=0,n=p.length;o<n;++o){p[o].updateDisplayPosition()}};g.unWind=function(){console.log("Unwinding",g);_.each(g.elevators.concat(g.elevatorInterfaces).concat(g.users).concat(g.floors).concat([g]),function(i){i.off("*")});g.challengeEnded=true;g.elevators=g.elevatorInterfaces=g.users=g.floors=[]};g.init=function(){for(var n=0;n<g.elevatorInterfaces.length;++n){g.elevatorInterfaces[n].checkDestinationQueue()}};return g};return a};var createWorldController=function(b){var a=riot.observable({});a.timeScale=1;a.isPaused=true;a.start=function(f,i,h,e){a.isPaused=true;var c=null;var d=true;f.on("usercode_error",a.handleUserCodeError);var g=function(j){if(!a.isPaused&&!f.challengeEnded&&c!==null){if(d){d=false;try{i.init(f.elevatorInterfaces,f.floors);f.init()}catch(n){a.handleUserCodeError(n)}}var l=(j-c);var k=l*0.001*a.timeScale;k=Math.min(k,b*3*a.timeScale);try{i.update(k,f.elevatorInterfaces,f.floors)}catch(n){a.handleUserCodeError(n)}while(k>0&&!f.challengeEnded){var m=Math.min(b,k);f.update(m);k-=b}f.updateDisplayPositions();f.trigger("stats_display_changed")}c=j;if(!f.challengeEnded){h(g)}};if(e){a.setPaused(false)}h(g)};a.handleUserCodeError=function(c){a.setPaused(true);console.log("Usercode error on update",c);a.trigger("usercode_error",c)};a.setPaused=function(c){a.isPaused=c;a.trigger("timescale_changed")};a.setTimeScale=function(c){a.timeScale=c;a.trigger("timescale_changed")};return a};